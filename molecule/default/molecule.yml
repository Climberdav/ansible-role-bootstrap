---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
driver:
  name: docker
lint:
  name: yamllint
  options:
    config-file: molecule/.yamllint
platforms:
  # https://hub.docker.com/search/?type=image
  - name: "${TEST_INSTANCE_PREFIX:-instance}_${TEST_DISTRO:-centos-latest}_${TOX_ENVNAME:-docker}"
    image: ${TEST_DOCKER_IMAGE:-centos:latest}
    pre_build_image: yes
    command: ${TEST_DOCKER_COMMAND:-sleep infinity}
    groups:
      - ${TEST_DISTRO:-centos-latest}_docker
provisioner:
  name: ansible
  lint:
    name: ansible-lint
  config_options:
    defaults:
      callback_plugins: /usr/lib/python${TOX_PYTHON_VERSION:-3.7}/site-packages/ara/plugins/callbacks
  playbooks:
    converge: ${TEST_PLAYBOOK:-../playbook.yml}
  inventory:
    group_vars:
      amazonlinux-latest_docker:
        ansible_python_interpreter: /usr/bin/python3
      alpine-latest_docker:
        ansible_python_interpreter: /usr/bin/python3
      alpine-edge_docker:
        ansible_python_interpreter: /usr/bin/python3
      centos-latest_docker:
        ansible_python_interpreter: /usr/bin/python3
      debian-latest_docker:
        ansible_python_interpreter: /usr/bin/python3
      debian-unstable_docker:
        ansible_python_interpreter: /usr/bin/python3
      fedora-latest_docker:
        ansible_python_interpreter: /usr/bin/python3
      fedora-rawhide_docker:
        ansible_python_interpreter: /usr/bin/python3
      kali-latest_docker:
        ansible_python_interpreter: /usr/bin/python3
      redhat-latest_docker:
        ansible_python_interpreter: /usr/bin/python3
      ubuntu-latest_docker:
        ansible_python_interpreter: /usr/bin/python3
      ubuntu-devel_docker:
        ansible_python_interpreter: /usr/bin/python3
scenario:
  name: default
verifier:
  name: goss
  directory: ../tests
  lint:
    name: yamllint
